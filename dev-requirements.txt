# Pip requirements file for development dependencies.


# Include install dependencies
-r requirements.txt


# Direct dependencies for development and indirect dependencies for development
# that are needed for some reason (must be consistent with minimum-constraints.txt)

# Six
six>=1.14.0; python_version <= '3.9'
six>=1.16.0; python_version >= '3.10'

# PEP517 package builder, used in Makefile
build>=0.5.0
# build up to version 0.9 requires pep517>=0.9.1
pep517>=0.9.1

# Safety CI by pyup.io
# Safety is run only on Python >=3.7
safety>=3.0.1; python_version >= '3.7'

# Unit test (imports into testcases):
# pytest 4.3.1 solves an issue on Python 3 with minimum package levels
pytest>=4.3.1; python_version == '3.6'
pytest>=4.4.0; python_version >= '3.7' and python_version <= '3.9'
pytest>=6.2.5; python_version >= '3.10'
importlib-metadata>=2.1.3,<5; python_version == '3.6'
importlib-metadata>=4.8.3,<5; python_version >= '3.7'

# packaging is used by pytest, pip-check-reqs, sphinx
# packaging>=20.5 is needed by pip-check-reqs 2.4.3 but it requires only packaging>=16.0
packaging>=21.0

# Virtualenv
# build requires virtualenv.cli_run which was added in 20.1
# virtualenv 20.0 requires six<2,>=1.12.0
# virtualenv 20.16.0 removed support for Python<3.6
virtualenv>=20.15.0; python_version <= '3.11'
virtualenv>=20.23.0; python_version >= '3.12'

# Coverage reporting (no imports, invoked via coveralls script):
# coveralls pins coverage to <7.0, causing pip backtracking to happen. Pinning
# it to <7.0 in this file saves the time for backtracking, but requires to
# occasionally check for new versions of coveralls without pinning.
coverage>=5.0,<7.0
pytest-cov>=2.7.0
coveralls>=3.3.0

# Flake8 and dependents (no imports, invoked via flake8 script):
# flake8 3.9.0 has removed support for py34 and pip 19.1.1 on py34 does not deal
# well with its pinned dependencies, so we need to repeat these for py34.
# flake8 4.0.0 fixes an AttributeError on Python 3.10.
flake8>=3.8.0; python_version <= '3.9'
flake8>=5.0.0; python_version >= '3.10'
mccabe>=0.6.0; python_version <= '3.9'
mccabe>=0.7.0; python_version >= '3.10'
pycodestyle>=2.6.0; python_version <= '3.9'
pycodestyle>=2.9.0; python_version >= '3.10'
pyflakes>=2.2.0; python_version <= '3.9'
pyflakes>=2.5.0; python_version >= '3.10'
entrypoints>=0.3.0

# PyLint (no imports, invoked via pylint script)
# Pylint requires astroid
# Pylint 2.7 / astroid 2.5 started requiring Python>=3.6
# Pylint 2.14 / astroid 2.12 started requiring Python>=3.7
# Pylint 3.0 / astroid 3.0 started requiring Python>=3.8
pylint>=2.13.0,<2.14.0; python_version == '3.6'
pylint>=2.13.0; python_version >= '3.7' and python_version <= '3.10'
pylint>=2.15.0; python_version == '3.11'
pylint>=3.0.1; python_version >= '3.12'
astroid>=2.11.0; python_version <= '3.10'
astroid>=2.12.4; python_version == '3.11'
astroid>=3.0.1; python_version >= '3.12'
typed-ast>=1.4.0,<1.5.0; python_version <= '3.7' and implementation_name=='cpython'
# lazy-object-proxy is used by astroid
lazy-object-proxy>=1.4.3
wrapt>=1.11.2; python_version <= '3.10'
wrapt>=1.14; python_version >= '3.11'
# platformdirs is used by pylint starting with its 2.10
platformdirs>=2.2.0; python_version <= '3.11'
platformdirs>=3.2.0; python_version >= '3.12'
# isort 4.2.8 fixes a pylint issue with false positive on import order of ssl on Windows
# isort 4.3.8 fixes an issue with py310 and works on py310 (Note that isort 5.10.0 has official support for py310)
isort>=4.3.8
# Pylint 2.14 uses tomlkit>=0.10.1 and requires py>=3.7
tomlkit>=0.10.1; python_version >= '3.7'
# dill is used by pylint >=2.13
dill>=0.2; python_version <= '3.10'
dill>=0.3.7; python_version >= '3.11'

# Sphinx (no imports, invoked via sphinx-build script):
# Sphinx 6.0.0 started requiring Python>=3.8
# Sphinx 7.2.0 started requiring Python>=3.9
# Sphinx is used only on Python>=3.8
Sphinx>=7.1.0; python_version == '3.8'
Sphinx>=7.2.0; python_version >= '3.9'
# Sphinx 7.1.0 pins docutils to <0.21
docutils>=0.18.1,<0.21; python_version == '3.8'
sphinx-git>=10.1.1; python_version >= '3.8'
GitPython>=3.1.41; python_version >= '3.8'
Pygments>=2.15.0; python_version >= '3.8'
sphinx-rtd-theme>=2.0.0; python_version >= '3.8'
sphinxcontrib-applehelp>=1.0.4; python_version >= '3.8'
sphinxcontrib-devhelp>=1.0.2; python_version >= '3.8'
sphinxcontrib-htmlhelp>=2.0.1; python_version >= '3.8'
sphinxcontrib-jquery>=4.1; python_version >= '3.8'
sphinxcontrib-jsmath>=1.0.1; python_version >= '3.8'
sphinxcontrib-qthelp>=1.0.3; python_version >= '3.8'
sphinxcontrib-serializinghtml>=1.1.5; python_version == '3.8'
sphinxcontrib-serializinghtml>=1.1.9; python_version >= '3.9'
sphinxcontrib-websupport>=1.2.4; python_version >= '3.8'
autodocsumm>=0.2.12; python_version >= '3.8'
Babel>=2.9.1; python_version >= '3.8'

# Twine (no imports, invoked via twine script):
twine>=3.0.0
# readme-renderer (used by twine, uses Pygments)
# readme-renderer 25.0 or higher is needed to address issue on Windows with py39
readme-renderer>=25.0

# Package dependency management tools (not used by any make rules)
pipdeptree>=2.2.0
# pip-check-reqs 2.3.2 is needed to have proper support for pip<21.3.
# pip-check-reqs 2.4.0 requires Python>=3.8.
# pip-check-reqs 2.4.3 fixes a speed issue on Python 3.11 and requires pip>=21.2.4
# pip-check-reqs 2.5.0 has issue https://github.com/r1chardj0n3s/pip-check-reqs/issues/143
pip-check-reqs>=2.3.2; python_version <= '3.7'
pip-check-reqs>=2.4.3,!=2.5.0; python_version >= '3.8' and python_version <= '3.11'
pip-check-reqs>=2.5.1; python_version >= '3.12'
